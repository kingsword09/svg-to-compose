name: CI/CD Pipeline

on:
  push:
    branches: [ "**" ]  # Trigger on all branches
  pull_request:
    branches: [ "**" ]  # Trigger on all branches

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.caching=true

jobs:
  build:
    name: Build and Validate
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build
        env:
          # Set empty signing vars to skip signing in regular CI builds
          SIGNING_KEY: ""
          SIGNING_PASSWORD: ""
        run: ./gradlew build --stacktrace

      - name: Run tests (if any)
        run: ./gradlew test --stacktrace
        continue-on-error: true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            build/libs/*.jar
            build/distributions/*.zip

  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    needs: [build]
    if: github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, 'chore(release):')

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Extract version from commit message
        id: extract_version
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          VERSION=$(echo "$COMMIT_MSG" | grep -oP 'chore\(release\):\s*v\K[0-9]+\.[0-9]+\.[0-9]+')
          if [ -z "$VERSION" ]; then
            echo "No valid version found in commit message: $COMMIT_MSG"
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Update version in build files
        run: |
          VERSION=${{ steps.extract_version.outputs.version }}
          # Update version in build.gradle.kts
          sed -i "s/version = \".*\"/version = \"$VERSION\"/" build.gradle.kts
          echo "Updated version to $VERSION"

      - name: Build release artifacts
        run: ./gradlew build --stacktrace

      - name: List build artifacts
        run: |
          echo "Listing build directory contents:"
          find build -name "*.jar" -o -name "*.zip" | head -10
          echo "Current version in build.gradle.kts:"
          grep "version = " build.gradle.kts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.extract_version.outputs.version }}
          name: v${{ steps.extract_version.outputs.version }}
          body: |
            ## svg2compose v${{ steps.extract_version.outputs.version }}
          files: |
            build/libs/*.jar
            build/distributions/*.zip
          draft: false
          prerelease: false
          generate_release_notes: true
          token: ${{ secrets.GITHUB_TOKEN }}

  publish-maven-central:
    name: Publish to Maven Central
    runs-on: ubuntu-latest
    needs: release
    if: github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, 'chore(release):')

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Extract version from commit message
        id: extract_version
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          VERSION=$(echo "$COMMIT_MSG" | grep -oP 'chore\(release\):\s*v\K[0-9]+\.[0-9]+\.[0-9]+')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Update version in build files
        run: |
          VERSION=${{ steps.extract_version.outputs.version }}
          sed -i "s/version = \".*\"/version = \"$VERSION\"/" build.gradle.kts

      - name: Publish to Maven Central
        run: ./gradlew publishAllPublicationsToDeploymentsRepository --stacktrace
        env:
          SONATYPE_AUTH_BASE64: ${{ secrets.SONATYPE_AUTH_BASE64 }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
